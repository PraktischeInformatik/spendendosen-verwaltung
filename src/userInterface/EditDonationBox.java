/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package userInterface;

import java.awt.Image;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;

import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

import applicationLogic.DonationBox;
import applicationLogic.OrgaBoxHistory;
import applicationLogic.OrganisationPerson;
import applicationLogic.PersonHistory;
import applicationLogicAccess.Access;
import applicationLogicAccess.PersonHistoryAccess;

/**
 *
 * @author Timo
 */
public class EditDonationBox extends javax.swing.JDialog {
    String[] orgPersArray;
    int boxId;

    /**
     * Initializes the Window
     *
     * @param parent the parent
     * @param modal determines if the window should be modal or not
     * @param boxId the ID of the DonationBox we want to edit
     */
    public EditDonationBox(java.awt.Frame parent, boolean modal, int boxId) {
        super(parent, modal);
        this.boxId = boxId;
        DonationBox thisBox = Access.getDonationBoxById(boxId);
        ArrayList<OrganisationPerson> orgPersList = Access.getAllOrganisationPersons();
        int sizePersList = 0;
        for (OrganisationPerson currPers : orgPersList) {
            if (currPers.getIsActiveMember()) {
                sizePersList++;
            }                    
        }        
        orgPersArray = new String[sizePersList+1];
        orgPersArray[0] = " --- ";
        int i=1;
        for (OrganisationPerson currPers : orgPersList) {
            if (currPers.getIsActiveMember()) {
                String currString = ""+ currPers.getPersonId()+" "+currPers.getLastName()+", "+currPers.getForename();
                    orgPersArray[i] = currString;
                    i++;
            }                    
        }
        
        int selectThisElement = 0;
        int persId = thisBox.getCurrentResponsiblePerson().getPersonId();
        
        initComponents();
        // Define icons
        ImageIcon imgLupe = new ImageIcon("images/imgLupe.png");
        ImageIcon imgAuge = new ImageIcon("images/imgAuge.png");
        ImageIcon imgPerson = new ImageIcon("images/imgPerson.png");
        ImageIcon imgPlus = new ImageIcon("images/imgPlus.png");
        ImageIcon imgBearbeiten = new ImageIcon("images/imgBearbeiten.png");
        ImageIcon imgPfeil = new ImageIcon("images/imgPfeil.png");
        ImageIcon imgKreuz = new ImageIcon("images/imgKreuz.png");
        ImageIcon imgDocument = new ImageIcon("images/imgDocument.png");
        ImageIcon imgGeld = new ImageIcon("images/imgGeld.png");
        //added by sz
      	Image imgIcon = new ImageIcon("images/icon.png").getImage();
      	setIconImage(imgIcon);
      	//
        btnCancel.setIcon(imgKreuz);
        btnAddNewPerson.setIcon(imgPerson);
        btnAccept.setIcon(imgPlus);
        this.setLocationRelativeTo(null);
        
        comBoxPerson.setModel(new javax.swing.DefaultComboBoxModel(orgPersArray));
        
        // get the index of the element we want to have preselected
        for (int j = 1;j < comBoxPerson.getItemCount(); j++) {
            String[] split = comBoxPerson.getItemAt(j).toString().split(" ");
            if ( Integer.parseInt(split[0]) == persId) {
                selectThisElement = j;
                break;
            } 
        }
        comBoxPerson.setSelectedIndex(selectThisElement);
        txtComment.setText(thisBox.getComment());
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code"> desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        comBoxPerson = new javax.swing.JComboBox();
        btnAddNewPerson = new javax.swing.JButton();
        txtComment = new javax.swing.JTextField();
        btnAccept = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Spendendose bearbeiten");

        jLabel11.setText("Verantwortliche Person auswählen");

        jLabel1.setText("Kommentar:");

        comBoxPerson.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "---" }));

        btnAddNewPerson.setText("Neue Person hinzufügen");
        btnAddNewPerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNewPersonActionPerformed(evt);
            }
        });

        btnAccept.setText("Übernehmen");
        btnAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptActionPerformed(evt);
            }
        });

        btnCancel.setText("Abbrechen");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txtComment, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(175, 175, 175)
                                .addComponent(jLabel10))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(198, 198, 198)
                                .addComponent(comBoxPerson, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAddNewPerson)))
                .addContainerGap(51, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addComponent(btnAccept)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCancel)
                .addGap(87, 87, 87))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel10)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(comBoxPerson, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddNewPerson))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtComment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAccept)
                    .addComponent(btnCancel))
                .addContainerGap(53, Short.MAX_VALUE))
        );

        pack();
    }//</editor-fold>//GEN-END:initComponents

    private void btnAddNewPersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNewPersonActionPerformed
        AddOrganisationPerson MainFrame = new AddOrganisationPerson(null,
            true);
        MainFrame.setVisible(true);
        comBoxPerson.removeAllItems();

        ArrayList<OrganisationPerson> orgPersList = Access.getAllOrganisationPersons();
        int sizePersList = orgPersList.size();
        orgPersArray = new String[sizePersList+1];
        orgPersArray[0] = " --- ";
        int i=1;
        for (OrganisationPerson currPers : orgPersList) {
            String currString = ""+ currPers.getPersonId()+" "+currPers.getLastName()+", "+currPers.getForename();
            orgPersArray[i] = currString;
            i++;
        }

        comBoxPerson.setModel(new javax.swing.DefaultComboBoxModel(orgPersArray));
    }//GEN-LAST:event_btnAddNewPersonActionPerformed

    private void btnAcceptActionPerformed(java.awt.event.ActionEvent evt){//GEN-FIRST:event_btnAcceptActionPerformed
        String newComment = txtComment.getText();
        int newPersId = 1000000;
//        DonationBox editedBox = Access.getDonationBoxById(boxId);        
        if (comBoxPerson.getSelectedIndex() == 0) {
            newPersId = 1000000;
        } else {
            String[] split = comBoxPerson.getSelectedItem().toString().split(" ");
            newPersId = Integer.parseInt(split[0]);
        }
        
        

//        editedBox.setComment(newComment);
        if(newComment.isEmpty()) {
        	newComment = "-";
//        	editedBox.setComment("-");
        }
        
//        OrganisationPerson person = (OrganisationPerson) Access.getPersonById(newPersId);
//        if (person.getPersonId() == editedBox.getCurrentResponsiblePerson().getPersonId())
//        {
//        	 editedBox.setCurrentResponsiblePerson((OrganisationPerson) Access.getPersonById(newPersId));
//        }
//        else
//        {  	       
//        	if(person.getPersonId() == 1000000)
//        	{
//        		ArrayList<PersonHistory> list = PersonHistoryAccess.searchOrgaBoxHistoriesByCollectionId(editedBox.getBoxId());
//    			OrgaBoxHistory history = (OrgaBoxHistory) list.get(list.size()-1);
//    			history.setEndDate(Calendar.getInstance());
//    			PersonHistoryAccess.editOrgaBoxHistory(history);
//        	}
//        	else 
//        	{
//        		if(editedBox.getCurrentResponsiblePerson().getPersonId() == 1000000)
//        		{
//        			Date date = new Date();
//            		editedBox.setCurrentResponsiblePerson((OrganisationPerson) Access.getPersonById(newPersId));
//            		PersonHistoryAccess.insertOrgaBoxHistory(editedBox.getCurrentResponsiblePerson().getPersonId(), editedBox.getBoxId(), date, null);
//        		}
//        		else
//        		{
//        			ArrayList<PersonHistory> list = PersonHistoryAccess.searchOrgaBoxHistoriesByCollectionId(editedBox.getBoxId());
//        			OrgaBoxHistory history = (OrgaBoxHistory) list.get(list.size()-1);
//        			history.setEndDate(Calendar.getInstance());
//        			PersonHistoryAccess.editOrgaBoxHistory(history);
//        			
//        			Date date = new Date();
//        			editedBox.setCurrentResponsiblePerson((OrganisationPerson) Access.getPersonById(newPersId));
//        			PersonHistoryAccess.insertOrgaBoxHistory(editedBox.getCurrentResponsiblePerson().getPersonId(), editedBox.getBoxId(), date, null);
//        		}
//        	}
//        	editedBox.setCurrentResponsiblePerson((OrganisationPerson) Access.getPersonById(newPersId));
//        }
        
 
       
        try {
        	Access.editDonationBox(boxId, newPersId, newComment);
//            Access.editDonationBox(editedBox);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"SQLException!","Fehler",JOptionPane.ERROR_MESSAGE);
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(null,"parseException!","Fehler",JOptionPane.ERROR_MESSAGE);
        }
        
        dispose();
    }//GEN-LAST:event_btnAcceptActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditDonationBox.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditDonationBox.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditDonationBox.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditDonationBox.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAccept;
    private javax.swing.JButton btnAddNewPerson;
    private javax.swing.JButton btnCancel;
    private javax.swing.JComboBox comBoxPerson;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JTextField txtComment;
    // End of variables declaration//GEN-END:variables
}
