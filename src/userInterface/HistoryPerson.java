/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package userInterface;

import java.awt.Image;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collections;

import javax.swing.ImageIcon;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

import applicationLogic.ContactPerson;
import applicationLogic.ContactPersonHistory;
import applicationLogic.OrgaBoxHistory;
import applicationLogic.OrgaCollectionHistory;
import applicationLogic.OrganisationPerson;
import applicationLogic.Person;
import applicationLogic.PersonHistory;
import applicationLogicAccess.Access;

/**
 *
 * @author Timo
 */
public class HistoryPerson extends javax.swing.JDialog {

    
    DefaultTableModel tableModel;
    ArrayList<PersonHistory> list;
    
    /**
     * Initializes the Window
     *
     * @param parent the parent
     * @param modal determines if the window should be modal or not
     * @param list the list of Persons we want to display inside of the window
     */
    public HistoryPerson(java.awt.Frame parent, boolean modal, ArrayList<PersonHistory> list) {
        super(parent, modal);
        Collections.reverse(list);
        this.list = list;
        initComponents();
        initTable(list); 
        tablePersons.getSelectionModel().addListSelectionListener(new ListSelectionListener() {            
                    @Override
                    public void valueChanged(ListSelectionEvent e) {
                         HistoryPerson.updateTextfields((int) tablePersons.getValueAt(tablePersons.getSelectedRow(), 2));
                    }
        });
      //added by sz
      Image imgIcon = new ImageIcon("images/icon.png").getImage();
      setIconImage(imgIcon);
      //
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code"> desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel10 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        txtLastname = new javax.swing.JTextField();
        txtForename = new javax.swing.JTextField();
        txtStreet = new javax.swing.JTextField();
        txtZipCity = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtPhone = new javax.swing.JTextField();
        txtMobile = new javax.swing.JTextField();
        txtComment = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablePersons = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Historie");

        jLabel1.setText("Id");

        jLabel2.setText("Nachname");

        jLabel3.setText("Vorname");

        jLabel4.setText("Straße");

        jLabel5.setText("Postleitzahl, Ort");

        jLabel6.setText("Email");

        jLabel7.setText("Festnetz");

        jLabel8.setText("Mobil");

        jLabel9.setText("Kommentar");

        txtId.setEditable(false);

        txtLastname.setEditable(false);

        txtForename.setEditable(false);

        txtStreet.setEditable(false);

        txtZipCity.setEditable(false);

        txtEmail.setEditable(false);

        txtPhone.setEditable(false);

        txtMobile.setEditable(false);

        txtComment.setEditable(false);

        tablePersons.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Von", "Bis", "Id", "Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablePersons.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(tablePersons);
        if (tablePersons.getColumnModel().getColumnCount() > 0) {
            tablePersons.getColumnModel().getColumn(0).setMinWidth(80);
            tablePersons.getColumnModel().getColumn(0).setMaxWidth(80);
            tablePersons.getColumnModel().getColumn(1).setMinWidth(80);
            tablePersons.getColumnModel().getColumn(1).setMaxWidth(80);
            tablePersons.getColumnModel().getColumn(2).setMinWidth(30);
            tablePersons.getColumnModel().getColumn(2).setMaxWidth(30);
        }

        jButton1.setText("Fenster schließen");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtLastname, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtForename, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtStreet, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtZipCity, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMobile, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtComment, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(329, 329, 329))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(375, 375, 375))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtLastname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtForename, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtStreet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtZipCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtMobile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtComment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(35, 35, 35))
        );

        pack();
    }//</editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HistoryPerson.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HistoryPerson.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HistoryPerson.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HistoryPerson.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tablePersons;
    private static javax.swing.JTextField txtComment;
    private static javax.swing.JTextField txtEmail;
    private static javax.swing.JTextField txtForename;
    private static javax.swing.JTextField txtId;
    private static javax.swing.JTextField txtLastname;
    private static javax.swing.JTextField txtMobile;
    private static javax.swing.JTextField txtPhone;
    private static javax.swing.JTextField txtStreet;
    private static javax.swing.JTextField txtZipCity;
    // End of variables declaration//GEN-END:variables

    private void initTable(ArrayList<PersonHistory> list) {
        tableModel = (DefaultTableModel) tablePersons.getModel();
        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
        String begin;
        String end;
        
        if (list.size() == 0) {
            return;
        } else if (list.get(0).getClass().getSimpleName().equals("ContactPersonHistory")) {
            for (PersonHistory curr : list) {
                
                if (curr.getBeginDate() != null) {
                    begin = sdf.format(curr.getBeginDate().getTime());
                } else {
                        begin = "-";
                }

                if (curr.getEndDate() != null) {
                        end = sdf.format(curr.getEndDate().getTime());
                } else {
                        end = "-";
                }
                
                ContactPersonHistory conCurr = (ContactPersonHistory) curr;
                ContactPerson perCurr = (ContactPerson) Access.getPersonById(conCurr.getContactPersonId());
                tableModel.insertRow(tableModel.getRowCount(), new Object[] {begin, end,conCurr.getContactPersonId(),perCurr.getLastName() + ", " + perCurr.getForename()});
            }
            
        } else if (list.get(0).getClass().getSimpleName().equals("OrgaCollectionHistory")){
            for (PersonHistory curr : list) {
                
                if (curr.getBeginDate() != null) {
                    begin = sdf.format(curr.getBeginDate().getTime());
                } else {
                        begin = "-";
                }

                if (curr.getEndDate() != null) {
                        end = sdf.format(curr.getEndDate().getTime());
                } else {
                        end = "-";
                }
                
                OrgaCollectionHistory conCurr = (OrgaCollectionHistory) curr;
                OrganisationPerson perCurr = (OrganisationPerson) Access.getPersonById(conCurr.getOrganisationPersonId());
                tableModel.insertRow(tableModel.getRowCount(), new Object[] {begin, end,conCurr.getOrganisationPersonId(),perCurr.getLastName() + ", " + perCurr.getForename()});
            }
        } else if (list.get(0).getClass().getSimpleName().equals("OrgaBoxHistory")){
            for (PersonHistory curr : list) {
                
                if (curr.getBeginDate() != null) {
                    begin = sdf.format(curr.getBeginDate().getTime());
                } else {
                        begin = "-";
                }

                if (curr.getEndDate() != null) {
                        end = sdf.format(curr.getEndDate().getTime());
                } else {
                        end = "-";
                }
                
                OrgaBoxHistory conCurr = (OrgaBoxHistory) curr;
                OrganisationPerson perCurr = (OrganisationPerson) Access.getPersonById(conCurr.getOrganisationPersonId());
                tableModel.insertRow(tableModel.getRowCount(), new Object[] {begin, end,conCurr.getOrganisationPersonId(),perCurr.getLastName() + ", " + perCurr.getForename()});
            }
        }
        
    }
    
    private static void updateTextfields(int persId) {
        Person currPers = Access.getPersonById(persId);
        txtId.setText("" + currPers.getPersonId());
        txtLastname.setText(currPers.getLastName());
        txtForename.setText(currPers.getForename());
        txtStreet.setText(currPers.getAddress().getStreetName() + " " + currPers.getAddress().getHauseNumber());
        txtZipCity.setText(currPers.getAddress().getZip() + " " + currPers.getAddress().getLocationName());
        txtEmail.setText(currPers.getEmail());
        txtPhone.setText(currPers.getTelephoneNumber());
        txtMobile.setText(currPers.getMobilNumber());
        txtComment.setText(currPers.getComment());
    }
}
