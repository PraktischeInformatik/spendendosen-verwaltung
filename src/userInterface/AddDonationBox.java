/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package userInterface;

import java.awt.Image;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Date;

import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

import applicationLogic.DonationBox;
import applicationLogic.DonationBoxManager;
import applicationLogic.IdInUseException;
import applicationLogic.OrganisationPerson;
import applicationLogicAccess.Access;
import applicationLogicAccess.PersonHistoryAccess;

/**
 * 
 * @author Timo, Marcel
 */
public class AddDonationBox extends javax.swing.JDialog {

	String[] orgPersArray;

	/**
	 * Initializes the Window
	 * 
	 * @param parent
	 *            the parent
	 * @param modal
	 *            determines if the window should be modal or not
	 */
	public AddDonationBox(java.awt.Frame parent, boolean modal) {
		super(parent, modal);
		ArrayList<OrganisationPerson> orgPersList = Access
				.getAllOrganisationPersons();
		int sizePersList = 0;
		for (OrganisationPerson currPers : orgPersList) {
			if (currPers.getIsActiveMember()) {
				sizePersList++;
			}
		}
		orgPersArray = new String[sizePersList + 1];
		orgPersArray[0] = " --- ";
		int i = 1;
		for (OrganisationPerson currPers : orgPersList) {
			if (currPers.getIsActiveMember()) {
				String currString = "" + currPers.getPersonId() + " "
						+ currPers.getLastName() + ", "
						+ currPers.getForename();
				orgPersArray[i] = currString;
				i++;
			}
		}
		initComponents();
		// Define icons
		ImageIcon imgLupe = new ImageIcon("images/imgLupe.png");
		ImageIcon imgAuge = new ImageIcon("images/imgAuge.png");
		ImageIcon imgPerson = new ImageIcon("images/imgPerson.png");
		ImageIcon imgPlus = new ImageIcon("images/imgPlus.png");
		ImageIcon imgBearbeiten = new ImageIcon("images/imgBearbeiten.png");
		ImageIcon imgPfeil = new ImageIcon("images/imgPfeil.png");
		ImageIcon imgKreuz = new ImageIcon("images/imgKreuz.png");
		ImageIcon imgDocument = new ImageIcon("images/imgDocument.png");
		ImageIcon imgGeld = new ImageIcon("images/imgGeld.png");
		//added by sz
		Image imgIcon = new ImageIcon("images/icon.png").getImage();
		setIconImage(imgIcon);
		//
		btnAddNewPerson.setIcon(imgPerson);
		btnCancel.setIcon(imgKreuz);
		btnCreateBox.setIcon(imgPlus);
		this.setLocationRelativeTo(null);
		comBoxPerson
				.setModel(new javax.swing.DefaultComboBoxModel(orgPersArray));
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code"> desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jLabel10 = new javax.swing.JLabel();
		jLabel7 = new javax.swing.JLabel();
		txtFieldComment = new javax.swing.JTextField();
		btnAddNewPerson = new javax.swing.JButton();
		comBoxPerson = new javax.swing.JComboBox();
		jLabel11 = new javax.swing.JLabel();
		btnCancel = new javax.swing.JButton();
		btnCreateBox = new javax.swing.JButton();
		jLabel1 = new javax.swing.JLabel();
		txtId = new javax.swing.JFormattedTextField();

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

		jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
		jLabel10.setText("Spendenbox hinzufuegen");

		jLabel7.setText("ID (optional)");

		btnAddNewPerson.setText("Neue Person hinzufügen");
		btnAddNewPerson.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnAddNewPersonActionPerformed(evt);
			}
		});

		comBoxPerson.setModel(new javax.swing.DefaultComboBoxModel(
				new String[] { "---" }));

		jLabel11.setText("Verantwortliche Person auswählen");

		btnCancel.setText("Abbrechen");
		btnCancel.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnCancelActionPerformed(evt);
			}
		});

		btnCreateBox.setText("Spendenbox erstellen");
		btnCreateBox.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnCreateBoxActionPerformed(evt);
			}
		});

		jLabel1.setText("Kommentar (optional)");

		txtId.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(
				new javax.swing.text.NumberFormatter(
						new java.text.DecimalFormat("#0"))));

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						javax.swing.GroupLayout.Alignment.TRAILING,
						layout.createSequentialGroup()
								.addContainerGap(28, Short.MAX_VALUE)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addGroup(
														javax.swing.GroupLayout.Alignment.TRAILING,
														layout.createSequentialGroup()
																.addComponent(
																		jLabel10,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		229,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addGap(126,
																		126,
																		126))
												.addGroup(
														javax.swing.GroupLayout.Alignment.TRAILING,
														layout.createSequentialGroup()
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.LEADING)
																				.addComponent(
																						jLabel11)
																				.addComponent(
																						jLabel7)
																				.addComponent(
																						jLabel1))
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.LEADING,
																				false)
																				.addGroup(
																						layout.createSequentialGroup()
																								.addComponent(
																										comBoxPerson,
																										javax.swing.GroupLayout.PREFERRED_SIZE,
																										132,
																										javax.swing.GroupLayout.PREFERRED_SIZE)
																								.addGap(18,
																										18,
																										18)
																								.addComponent(
																										btnAddNewPerson))
																				.addComponent(
																						txtFieldComment)
																				.addComponent(
																						txtId))
																.addGap(23, 23,
																		23))))
				.addGroup(
						javax.swing.GroupLayout.Alignment.TRAILING,
						layout.createSequentialGroup()
								.addGap(45, 45, 45)
								.addComponent(btnCreateBox)
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										Short.MAX_VALUE)
								.addComponent(btnCancel,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										123,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(51, 51, 51)));
		layout.setVerticalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addContainerGap()
								.addComponent(jLabel10)
								.addGap(35, 35, 35)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(
														comBoxPerson,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(btnAddNewPerson)
												.addComponent(jLabel11))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jLabel7)
												.addComponent(
														txtId,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jLabel1)
												.addComponent(
														txtFieldComment,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED,
										22, Short.MAX_VALUE)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(btnCreateBox)
												.addComponent(btnCancel))
								.addGap(64, 64, 64)));

		pack();
	}//</editor-fold>//GEN-END:initComponents

	private void btnAddNewPersonActionPerformed(java.awt.event.ActionEvent evt) {
		AddOrganisationPerson MainFrame = new AddOrganisationPerson(null, true);
		MainFrame.setVisible(true);
		comBoxPerson.removeAllItems();

		ArrayList<OrganisationPerson> orgPersList = Access
				.getAllOrganisationPersons();
		int sizePersList = orgPersList.size();
		orgPersArray = new String[sizePersList + 1];
		orgPersArray[0] = " --- ";
		int i = 1;
		for (OrganisationPerson currPers : orgPersList) {
			String currString = "" + currPers.getPersonId() + " "
					+ currPers.getLastName() + ", " + currPers.getForename();
			orgPersArray[i] = currString;
			i++;
		}

		comBoxPerson
				.setModel(new javax.swing.DefaultComboBoxModel(orgPersArray));

	}

	private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
		dispose();
	}//GEN-LAST:event_btnCancelActionPerformed

	private void btnCreateBoxActionPerformed(java.awt.event.ActionEvent evt)
			 {//GEN-FIRST:event_btnCreateBoxActionPerformed
		DonationBox toAdd = null;
		String comment;
		if (txtId.getText().equals("")) {
			toAdd = new DonationBox(DonationBoxManager.getInstance()
					.findLeastFreeId()); // Acces.createDonationBoxWithoutId();
			if (txtFieldComment.getText().equals("")) {
				comment = "-";
			} else {
				comment = txtFieldComment.getText();
			}
			toAdd.setComment(comment);
			int responsiblePersonId;
			if (comBoxPerson.getSelectedItem().toString().equals(" --- ")) {
				toAdd.setCurrentResponsiblePerson((OrganisationPerson) Access
						.getPersonById(1000000));
			} else {
				String currSelectedPerson = (String) comBoxPerson
						.getSelectedItem();
				String[] splitted = currSelectedPerson.split(" ");
				responsiblePersonId = Integer.parseInt(splitted[0]);
				toAdd.setCurrentResponsiblePerson((OrganisationPerson) Access
						.getPersonById(responsiblePersonId));
				//                PersonHistoryAccess.insertOrgaBoxHistory(toAdd.getCurrentResponsiblePerson().getPersonId(), toAdd.getBoxId(), new Date(), null);
			}
			try {
				Access.addNewDonationBox(toAdd);
				JOptionPane.showMessageDialog(
						null,
						"Die Dose wurde erfolgreich mit der Id "
								+ toAdd.getBoxId() + " angelegt", "Erfolg",
						JOptionPane.INFORMATION_MESSAGE);
				dispose();
			} catch (SQLException ex) {
				ex.printStackTrace();
				JOptionPane.showMessageDialog(null, "SQLException!", "Fehler",
						JOptionPane.ERROR_MESSAGE);
			} catch (ParseException ex) {
				JOptionPane.showMessageDialog(null, "ParseException!",
						"Fehler", JOptionPane.ERROR_MESSAGE);
			}
		} else {
			int boxId = Integer.parseInt(txtId.getText());
			try {
				toAdd = Access.createDonationBoxWithId(boxId);
				if (txtFieldComment.getText().equals("")) {
					comment = "-";
				} else {
					comment = txtFieldComment.getText();
				}
				toAdd.setComment(comment);
				int responsiblePersonId;
				if (comBoxPerson.getSelectedItem().toString().equals(" --- ")) {
					toAdd.setCurrentResponsiblePerson((OrganisationPerson) Access
							.getPersonById(1000000));
				} else {
					String currSelectedPerson = (String) comBoxPerson
							.getSelectedItem();
					String[] splitted = currSelectedPerson.split(" ");
					responsiblePersonId = Integer.parseInt(splitted[0]);
					toAdd.setCurrentResponsiblePerson((OrganisationPerson) Access
							.getPersonById(responsiblePersonId));
				}
				Access.addNewDonationBox(toAdd);
				JOptionPane.showMessageDialog(null,
						"Die Dose wurde erfolgreich mit der Id " + boxId
								+ " angelegt", "Erfolg",
						JOptionPane.INFORMATION_MESSAGE);
				dispose();
			} catch (SQLException ex) {
				ex.printStackTrace();
				JOptionPane.showMessageDialog(null, "SQLException!", "Fehler",
						JOptionPane.ERROR_MESSAGE);
			} catch (ParseException ex) {
				JOptionPane.showMessageDialog(null, "ParseException!",
						"Fehler", JOptionPane.ERROR_MESSAGE);
			} catch (IdInUseException ex) {
				JOptionPane
						.showMessageDialog(
								null,
								"ID "
										+ boxId
										+ " ist bereits in Benutzung, bitte wählen sie eine andere Id",
								"Fehler", JOptionPane.ERROR_MESSAGE);
			}

		}

		dispose();
	}//GEN-LAST:event_btnCreateBoxActionPerformed

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the
		 * default look and feel. For details see
		 * http://download.oracle.com/javase
		 * /tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager
					.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(AddDonationBox.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(AddDonationBox.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(AddDonationBox.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(AddDonationBox.class.getName())
					.log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the dialog */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				AddDonationBox dialog = new AddDonationBox(
						new javax.swing.JFrame(), true);
				dialog.addWindowListener(new java.awt.event.WindowAdapter() {
					@Override
					public void windowClosing(java.awt.event.WindowEvent e) {
						System.exit(0);
					}
				});
				dialog.setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton btnAddNewPerson;
	private javax.swing.JButton btnCancel;
	private javax.swing.JButton btnCreateBox;
	private javax.swing.JComboBox comBoxPerson;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel10;
	private javax.swing.JLabel jLabel11;
	private javax.swing.JLabel jLabel7;
	private javax.swing.JTextField txtFieldComment;
	private javax.swing.JFormattedTextField txtId;
	// End of variables declaration//GEN-END:variables
}
